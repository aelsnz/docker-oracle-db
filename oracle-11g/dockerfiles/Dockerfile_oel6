FROM aelsnz/oraclelinux:oel6

## Using aelsnz/oraclelinux:oel6 image which include all prerequisites, oracle user and directory structure


USER root

# Copy software and response files into /install
#
COPY	software/p13390677_112040_Linux-x86-64_1of7.zip /install/
COPY	software/p13390677_112040_Linux-x86-64_2of7.zip /install/
COPY  software/p6880880_112000_Linux-x86-64.zip /install/
COPY  software/p23615392_112040_Linux-x86-64.zip /install/
COPY  software/p19121551_112040_Linux-x86-64.zip /install/
COPY	scripts/db_install.rsp /home/oracle/bin/
COPY	scripts/manage-db.sh /home/oracle/bin/
COPY	scripts/create-db.sh /home/oracle/bin/
COPY  scripts/ocmconfig.rsp /home/oracle/bin/

# make sure oracle user own /install and /home/oracle/bin
#
RUN chown -R oracle:oinstall /install \
 && chown -R oracle:oinstall /home/oracle/bin/*.rsp \
 && chown -R oracle:oinstall /home/oracle/bin/*.sh \
 && chmod u+rx /home/oracle/bin/*.sh

# Switch to user Oracle
#
USER	oracle
WORKDIR	/install

# set current environment
#
ENV ORACLE_BASE=/u01/app/oracle
ENV ORACLE_HOME=/u01/app/oracle/product/11.2.0.4/dbhome_1
ENV PATH=/u01/app/oracle/product/11.2.0.4/dbhome_1/bin:/u01/app/oracle/product/11.2.0.4/dbhome_1/OPatch:$PATH
ENV NLS_DATE_FORMAT=dd/mm/yyyy:hh24:mi:ss

# Unzip software
RUN	unzip p13390677_112040_Linux-x86-64_1of7.zip \
  && rm -rf p13390677_112040_Linux-x86-64_1of7.zip \
  && unzip p13390677_112040_Linux-x86-64_2of7.zip \
  && rm -rf p13390677_112040_Linux-x86-64_2of7.zip
  
# Install Oracle Software
# 
RUN /install/database/runInstaller -silent -force -waitforcompletion -responsefile /home/oracle/bin/db_install.rsp -ignoresysprereqs -ignoreprereq

## Install OPatch
#
RUN cd $ORACLE_HOME \
 && rm -rf OPatch \
 && cp /install/p6880880_112000_Linux-x86-64.zip . \
 && unzip p6880880_112000_Linux-x86-64.zip \
 && rm -rf p6880880_112000_Linux-x86-64.zip \
 && cd /install 
 
## Install patch 9121551 as prereqs for 23177551
## ignore - nmosudo warning messages in patch 9121551 - noted in patch readme
## ignore - Ignore lazyload warnings  (Doc ID 2071922.1) - patch 23054359
RUN unzip p19121551_112040_Linux-x86-64.zip \
 && opatch apply -silent 19121551 -ocmrf /home/oracle/bin/ocmconfig.rsp \
 && unzip -o p23615392_112040_Linux-x86-64.zip \
 && cd 23615392 \
 && opatch apply -silent 23054359 -ocmrf /home/oracle/bin/ocmconfig.rsp \
 && opatch apply -silent 23177551 -ocmrf /home/oracle/bin/ocmconfig.rsp \
 && cd /install \
 && rm -rf *.zip \
 && rm -rf 1921* \
 && rm -rf 23* \
 && opatch lsinventory 

# Switch back to root
#
USER	root
RUN /u01/app/oraInventory/orainstRoot.sh \
 && /u01/app/oracle/product/11.2.0.4/dbhome_1/root.sh -silent \
 && rm -rf /install/database 

# Expose ports - oracle 
#
EXPOSE 1521 

# Switch back to Oracle user
#
USER oracle
WORKDIR	/home/oracle

# set current environment
#
ENV ORACLE_BASE=/u01/app/oracle
ENV ORACLE_HOME=/u01/app/oracle/product/11.2.0.4/dbhome_1
ENV PATH=/u01/app/oracle/product/11.2.0.4/dbhome_1/bin:$PATH
ENV NLS_DATE_FORMAT="dd/mm/yyyy:hh24:mi:ss" 

## 
#  You can create the database at this stage, or do it later using Volume for persistance 
#  For testing having the database in the image can save time, but it does make the image bigger
#  Uncomment below if you want a database in the image, otherwise you can run the command below as entrypoint 
#  script as well to create database on container start
####
# RUN cd /home/oracle/bin/ \
#  && ./create-db.sh -d DEV -a Y -e Y

CMD ["/bin/bash"]

